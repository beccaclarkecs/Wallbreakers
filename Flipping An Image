class Solution:
    def flipAndInvertImage(self, A: List[List[int]]) -> List[List[int]]:
        #        1100 reverse wold be 0011
        # index  0123                 0123
        # index  pos 0                pos 3     4-1
        # index  pos 1                pos 2     4-2
        # index  pos 2                pos 1     4-3
        # index  pos 3                pos 0     4-4
        # of elements (ex: 4) - # of rows or i (1,2,3,4) 
        
        #2D list
        #[row][col]
        #[i][j]
        
        #keep matrix same size
        rows = len(A)
        cols = len(A[0])

        #This is what's called a "list comprehension"
        B = [ ([0] * cols) for row in range(rows) ]
      
        
        i = 0
        
        #loop through 
        #for every row i and every column j get value in A
        #for every row j and change col value in B
        #do I need to increment i and j
        i = 0
        j = 0
        x = 1
        
        for i in range(len(A)): #rows
            for j in range(len(A[0])): # cols
                #2 rows 3 columns
                #for each row put in B col 3 -1, 3-2, 3-3
                #[row][col]
                #[i][j]
                # 1 - value to invert
                B[i][cols-x] = 1 - (A[i][j])
                x += 1
            x = 1
                
                
        return B
